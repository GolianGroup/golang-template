// Code generated by MockGen. DO NOT EDIT.
// Source: internal/database/connection.go
//
// Generated by this command:
//
//	mockgen -source=internal/database/connection.go -destination=internal/mocks/connection.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	sql "database/sql"
	ent "golang_template/internal/ent"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDatabase is a mock of Database interface.
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
	isgomock struct{}
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase.
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance.
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockDatabase) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockDatabaseMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDatabase)(nil).Close))
}

// DB mocks base method.
func (m *MockDatabase) DB() *sql.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DB")
	ret0, _ := ret[0].(*sql.DB)
	return ret0
}

// DB indicates an expected call of DB.
func (mr *MockDatabaseMockRecorder) DB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DB", reflect.TypeOf((*MockDatabase)(nil).DB))
}

// EntClient mocks base method.
func (m *MockDatabase) EntClient() *ent.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EntClient")
	ret0, _ := ret[0].(*ent.Client)
	return ret0
}

// EntClient indicates an expected call of EntClient.
func (mr *MockDatabaseMockRecorder) EntClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EntClient", reflect.TypeOf((*MockDatabase)(nil).EntClient))
}
